{"version":3,"sources":["dolphin.svg","components/APIKEY.js","components/UserInput.jsx","redux/players/playerActions.js","redux/players/playerTypes.js","components/Matrixsize.jsx","redux/game/gameActions.js","redux/game/gameTypes.js","components/Authentication.jsx","components/Navbar.jsx","components/Square.jsx","components/TicTacToe.jsx","components/Game.jsx","components/Scoreboard.jsx","components/Register.jsx","redux/players/playerReducer.js","redux/game/gameReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiKey","api","Axios","create","baseURL","APIKEY","UserInput","state","redUsername","redPassword","redVerified","blueUsername","bluePassword","blueVerified","handleSubmit","event","team","username","password","get","then","res","found","data","forEach","player","props","authenticateRed","authenticateBlue","setState","window","alert","preventDefault","handleInput","target","name","value","btn","status","style","color","marginLeft","visibility","className","to","onSubmit","e","htmlFor","type","onChange","this","Component","connect","dispatch","p","payload","Matrixsize","disabled","matrixSize","componentDidUpdate","console","log","Number","changeDimension","handleUpdate","id","placeholder","onClick","pointerEvents","red","verified","blue","d","AuthenticationPage","Navbar","src","dolphin","alt","Square","x","y","side","content","endGame","squareStyle","width","height","fontSize","squareClick","textContent","xando","innerHTML","dim","TicTacToe","dimensions","coord","turn","values","innerContainer","outerContainer","reset","onReset","handleWinner","count","diag1","diag2","win","i","row","col","xy","onWinner","handleClick","coordinates","onChangeTurn","game","val","j","push","map","index","key","GamePage","round","redScore","blueScore","handleStatus","handlePlay","updateRound","updateTurn","location","reload","handleEndGame","resetRound","_id","redData","total_score","put","blueData","history","winner","updateScore","handleTurn","handleReset","rand","Math","floor","random","t","r","Scoreboard","redPlayers","bluePlayers","players","length","total_matches","scores","sort","p1","p2","align","Register","confirmPassword","handleRegister","post","catch","error","backgroundColor","score","playerReducer","action","gameReducer","nextTurn","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","devToolsEnhancer","persistor","persistStore","subscribe","App","loading","basename","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.25f29e94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dolphin.8592cf61.svg\";","let apiKey = \"ba25a450f77b4dc78136b894278ee17f\";\r\n\r\nexport default apiKey;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/UserInput.css\";\r\nimport Axios from \"axios\";\r\nimport APIKEY from \"./APIKEY\";\r\nimport { connect } from \"react-redux\";\r\nimport { redAuthenticated, blueAuthenticated } from \"../redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst api = Axios.create({\r\n  baseURL: \"https://crudcrud.com/api/\" + APIKEY,\r\n});\r\n\r\nclass UserInput extends Component {\r\n  state = {\r\n    //red\r\n    redUsername: \"\",\r\n    redPassword: \"\",\r\n    redVerified: false,\r\n    //blue\r\n    blueUsername: \"\",\r\n    bluePassword: \"\",\r\n    blueVerified: false,\r\n  };\r\n\r\n  handleSubmit = (event, team) => {\r\n    const username = this.state[team + \"Username\"],\r\n      password = this.state[team + \"Password\"];\r\n\r\n    api.get(\"/\" + team).then((res) => {\r\n      let found = false;\r\n      const players = res.data;\r\n      players.forEach((player) => {\r\n        if (player.username === username && player.password === password) {\r\n          found = true;\r\n          if (team === \"red\") {\r\n            this.props.authenticateRed(player);\r\n          } else if (team === \"blue\") {\r\n            this.props.authenticateBlue(player);\r\n          }\r\n          this.setState({ [team + \"Verified\"]: true });\r\n        }\r\n      });\r\n      if (!found) {\r\n        window.alert(team + \" team authentication failed!\");\r\n      }\r\n    });\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  btn = (status) => {\r\n    let style;\r\n    style = {\r\n      color: \"white\",\r\n      marginLeft: \"5px\",\r\n    };\r\n    if (status === true) {\r\n      style.visibility = \"visible\";\r\n    } else {\r\n      style.visibility = \"hidden\";\r\n    }\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"ui-wave\">\r\n          <div className=\"title\">Marine Games</div>\r\n          <div className=\"scoreboard\">\r\n            <Link to=\"/scoreboard\" className=\"scoretitle\">\r\n              Scoreboard\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"flex-row1\">\r\n            <i style={{ color: \"white\" }} className=\"fab fa-joomla fa-9x\"></i>\r\n            <i style={{ color: \"white\" }} className=\"fab fa-slack fa-9x\"></i>\r\n          </div>\r\n\r\n          <div className=\"wave wave1\"></div>\r\n          <div className=\"wave wave2\"></div>\r\n          <div className=\"wave wave3\"></div>\r\n          <div className=\"wave wave4\"></div>\r\n        </section>\r\n\r\n        <div className=\"userinput-field\">\r\n          <form\r\n            className=\"blueteam-ui\"\r\n            onSubmit={(e) => this.handleSubmit(e, \"blue\")}\r\n          >\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              name=\"blueUsername\"\r\n              type=\"text\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              name=\"bluePassword\"\r\n              type=\"password\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <button className=\"verify-btn\" type=\"submit\">\r\n              Verify\r\n              <span style={this.btn(this.state.blueVerified)}>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n              </span>\r\n            </button>\r\n          </form>\r\n          <form\r\n            className=\"redteam-ui\"\r\n            onSubmit={(e) => this.handleSubmit(e, \"red\")}\r\n          >\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              name=\"redUsername\"\r\n              type=\"text\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              name=\"redPassword\"\r\n              type=\"password\"\r\n              onChange={(e) => this.handleInput(e)}\r\n            />\r\n            <button className=\"verify-btn\" type=\"submit\">\r\n              Verify\r\n              <span style={this.btn(this.state.redVerified)}>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n              </span>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    authenticateRed: (p) => dispatch(redAuthenticated(p)),\r\n    authenticateBlue: (p) => dispatch(blueAuthenticated(p)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(UserInput);\r\n//use null if we don't want to use mapStateToProps\r\n","import {\r\n  RED_AUTHENTICATE,\r\n  BLUE_AUTHENTICATE,\r\n  UPDATE_SCORE,\r\n} from \"./playerTypes\";\r\n\r\nconst redAuthenticated = (data) => {\r\n  return {\r\n    type: RED_AUTHENTICATE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst blueAuthenticated = (data) => {\r\n  return {\r\n    type: BLUE_AUTHENTICATE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst updateScore = (data) => {\r\n  return {\r\n    type: UPDATE_SCORE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport { redAuthenticated, blueAuthenticated, updateScore };\r\n","const RED_AUTHENTICATE = \"RED_AUTHENTICATE\";\r\nconst BLUE_AUTHENTICATE = \"BLUE_AUTHENTICATE\";\r\nconst UPDATE_SCORE = \"UPDATE_SCORE\";\r\nexport { RED_AUTHENTICATE, BLUE_AUTHENTICATE, UPDATE_SCORE };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateDimension } from \"../redux\";\r\nimport \"../styles/Matrixsize.css\";\r\n\r\nclass Matrixsize extends Component {\r\n  state = {\r\n    disabled: true,\r\n    matrixSize: 3,\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    console.log(this.props);\r\n    if (\r\n      this.props.redVerified === true &&\r\n      this.props.blueVerified === true &&\r\n      this.state.disabled === true\r\n    ) {\r\n      this.setState({ disabled: false });\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const matrixSize = Number(this.state.matrixSize);\r\n    this.props.changeDimension(matrixSize);\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    const matrixSize = e.target.value;\r\n    this.setState({ matrixSize });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-row\">\r\n        <form className=\"matrix\">\r\n          <input\r\n            id=\"matrixsize\"\r\n            type=\"number\"\r\n            name=\"MatrixSize\"\r\n            placeholder=\"Matrix Size\"\r\n            className=\"matrix-input\"\r\n            onChange={this.handleUpdate}\r\n          />\r\n          <Link\r\n            to=\"/game\"\r\n            onClick={this.handleSubmit}\r\n            className=\"submit\"\r\n            style={{\r\n              pointerEvents: this.state.disabled === true ? \"none\" : \"auto\",\r\n            }}\r\n          >\r\n            Start Game\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    redVerified: state.player.red.verified,\r\n    blueVerified: state.player.blue.verified,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeDimension: (d) => dispatch(updateDimension(d)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrixsize);\r\n","import {\r\n  END_GAME,\r\n  UPDATE_DIMENSIONS,\r\n  UPDATE_TURN,\r\n  UPDATE_ROUND,\r\n  RESET_ROUND,\r\n} from \"./gameTypes\";\r\n\r\nconst updateTurn = (currentTurn) => {\r\n  return {\r\n    type: UPDATE_TURN,\r\n    payload: currentTurn,\r\n  };\r\n};\r\n\r\nconst updateRound = () => {\r\n  return {\r\n    type: UPDATE_ROUND,\r\n  };\r\n};\r\n\r\nconst updateDimension = (dimension) => {\r\n  return {\r\n    type: UPDATE_DIMENSIONS,\r\n    payload: dimension,\r\n  };\r\n};\r\n\r\nconst endGame = () => {\r\n  return {\r\n    type: END_GAME,\r\n  };\r\n};\r\n\r\nconst resetRound = ()=>{\r\n  return {\r\n    type: RESET_ROUND,\r\n  }\r\n}\r\n\r\nexport { updateTurn, updateRound, updateDimension, endGame, resetRound };\r\n","const UPDATE_DIMENSIONS = \"UPDATE_DIMENSIONS\";\r\nconst UPDATE_ROUND = \"UPDATE_ROUND\";\r\nconst END_GAME = \"END_GAME\";\r\nconst UPDATE_TURN = \"UPDATE_TURN\";\r\nconst RESET_ROUND = \"RESET_ROUND\";\r\n\r\nexport { UPDATE_DIMENSIONS, UPDATE_ROUND, UPDATE_TURN, END_GAME, RESET_ROUND };\r\n","import React, { Component } from \"react\";\r\nimport UserInput from \"./UserInput\";\r\nimport Matrixsize from \"./Matrixsize\";\r\nimport \"../styles/Authentication.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AuthenticationPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"authBody\">\r\n        <UserInput />\r\n        <div className=\"register-section\">\r\n          <Link className=\"auth-register\" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n        <Matrixsize />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthenticationPage;\r\n","import React, { Component } from \"react\";\r\nimport dolphin from \"../dolphin.svg\";\r\nimport \"../styles/Navbar.css\";\r\n\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbarBrand\">\r\n          <img className=\"logo\" src={dolphin} alt=\"logo\" />\r\n          <span className=\"title\">Marine Games</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Square.css\";\r\n\r\nclass Square extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0,\r\n    side: 0,\r\n    content: null,\r\n    endGame: false,\r\n\r\n    squareStyle: {\r\n      width: 0,\r\n      height: 0,\r\n      fontSize: 0,\r\n    },\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ endGame: props.endGame });\r\n  }\r\n\r\n  squareClick = (event) => {\r\n    const { x, y, endGame } = this.state;\r\n    let value = event.target.textContent;\r\n    if (value !== \"X\" && value !== \"O\" && endGame === false) {\r\n      const xando = this.props.player === \"X\" ? \"X\" : \"O\";\r\n      event.target.innerHTML =\r\n        \"<div class='\" + xando + \"'>\" + this.props.player + \"</div>\";\r\n      this.props.onClick({ x: x, y: y });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //it is aceptable to directly change the state only in constructor else setState is prefered\r\n    const { x, y, dim, width } = this.props;\r\n    this.state.x = x;\r\n    this.state.y = y;\r\n    let side = (0.97 * width) / dim;\r\n\r\n    this.state.side = side;\r\n    this.state.squareStyle.width = side;\r\n    this.state.squareStyle.height = side;\r\n    this.state.squareStyle.fontSize = side / 2;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={this.state.squareStyle}\r\n        className=\"square\"\r\n        onClick={(e) => {\r\n          this.squareClick(e);\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"../styles/tttstyle.css\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TicTacToe extends Component {\r\n  state = {\r\n    dimensions: 3,\r\n    width: 450,\r\n    coord: [],\r\n    turn: \"X\",\r\n    values: [],\r\n    endGame: false,\r\n    style: {},\r\n  };\r\n\r\n  style = {\r\n    innerContainer: {\r\n      width: this.state.width,\r\n      height: this.state.width,\r\n    },\r\n    outerContainer: {\r\n      width: this.state.width * 1.01,\r\n      height: this.state.width * 1.01,\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.dimensions = Number(this.props.game.dimensions);\r\n    let d = this.state.dimensions;\r\n    for (let i = 0; i < d; i++) {\r\n      let val = [];\r\n      for (let j = 0; j < d; j++) {\r\n        this.state.coord.push([i, j]);\r\n        val.push(0);\r\n      }\r\n      this.state.values.push(val);\r\n    }\r\n    this.state.turn = this.props.turn;\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.reset === true) {\r\n      this.setState({\r\n        coord: [],\r\n        endGame: false,\r\n      });\r\n      this.props.onReset();\r\n    }\r\n  };\r\n\r\n  handleWinner = () => {\r\n    let { values, dimensions } = this.state;\r\n    let count = 0;\r\n    let diag1 = [0, 0];\r\n    let diag2 = [0, 0];\r\n    let win = null;\r\n    for (var i = 0; i < dimensions; i++) {\r\n      let row = [0, 0];\r\n      let col = [0, 0];\r\n      for (var xy = 0; xy < dimensions; xy++) {\r\n        row[0] = values[i][xy] === \"X\" ? row[0] + 1 : row[0];\r\n        row[1] = values[i][xy] === \"O\" ? row[1] + 1 : row[1];\r\n        col[0] = values[xy][i] === \"X\" ? col[0] + 1 : col[0];\r\n        col[1] = values[xy][i] === \"O\" ? col[1] + 1 : col[1];\r\n        if (values[i][xy] !== 0) {\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (row[0] === dimensions || col[0] === dimensions) {\r\n        win = \"X\";\r\n        break;\r\n      } else if (row[1] === dimensions || col[1] === dimensions) {\r\n        win = \"O\";\r\n        break;\r\n      }\r\n\r\n      diag1[0] = values[i][i] === \"X\" ? diag1[0] + 1 : diag1[0];\r\n      diag1[1] = values[i][i] === \"O\" ? diag1[1] + 1 : diag1[1];\r\n      diag2[0] =\r\n        values[i][dimensions + i - 1] === \"X\" ? diag2[0] + 1 : diag2[0];\r\n      diag2[1] =\r\n        values[i][dimensions + i - 1] === \"O\" ? diag2[1] + 1 : diag2[1];\r\n    }\r\n\r\n    if (diag1[0] === dimensions || diag2[0] === dimensions) {\r\n      win = \"X\";\r\n    } else if (diag1[1] === dimensions || diag2[1] === dimensions) {\r\n      win = \"O\";\r\n    }\r\n\r\n    if (win === \"X\") {\r\n      this.props.onWinner(\"X\");\r\n      this.setState({ endGame: true });\r\n    } else if (win === \"O\") {\r\n      this.props.onWinner(\"O\");\r\n      this.setState({ endGame: true });\r\n    } else if (count === dimensions * dimensions) {\r\n      this.props.onWinner(\"D\");\r\n      this.setState({ endGame: true });\r\n    }\r\n  };\r\n\r\n  handleClick = (coordinates) => {\r\n    if (!this.state.endGame) {\r\n      const { x, y } = coordinates;\r\n      let { values, turn } = this.state;\r\n      values[x][y] = turn;\r\n      turn = turn === \"X\" ? \"O\" : \"X\";\r\n      this.setState({ values: values, turn: turn }, () => {\r\n        this.props.onChangeTurn(this.state.turn);\r\n      });\r\n      this.handleWinner();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"outer-container\" style={this.style.outerContainer}>\r\n        <div className=\"inner-container\" style={this.style.innerContainer}>\r\n          {this.state.coord.map((d, index) => {\r\n            return (\r\n              <Square\r\n                onClick={this.handleClick}\r\n                player={this.state.turn}\r\n                key={index}\r\n                x={d[0]}\r\n                y={d[1]}\r\n                dim={this.state.dimensions}\r\n                width={this.state.width}\r\n                endGame={this.state.endGame}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    game: state.game,\r\n  };\r\n};\r\nexport default connect(mapStateToProps,null)(TicTacToe);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Axios from \"axios\";\r\nimport TicTacToe from \"./TicTacToe\";\r\nimport \"../styles/Game.css\";\r\nimport APIKEY from \"./APIKEY\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTurn, updateRound, endGame, updateScore, resetRound } from \"../redux\";\r\n\r\nconst api = Axios.create({ baseURL: \"https://crudcrud.com/api/\" + APIKEY });\r\n// let data;\r\nclass GamePage extends Component {\r\n  state = {\r\n    round: 1,\r\n    status: \"\",\r\n    turn: \"\",\r\n    endGame: false,\r\n    redScore: 0,\r\n    blueScore: 0,\r\n    reset: false,\r\n  };\r\n\r\n  handleStatus = () => {\r\n    if (!this.state.endGame) {\r\n      const { turn } = this.state;\r\n      const { red, blue } = this.props;\r\n      if (turn === \"X\") {\r\n        this.setState({ status: \"It's \" + red.username + \"'s turn\" });\r\n      } else if (turn === \"O\") {\r\n        this.setState({ status: \"It's \" + blue.username + \"'s turn\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    const { red, blue} = this.props;\r\n    this.state.redScore = red.total_score;\r\n    this.state.blueScore = blue.total_score;\r\n\r\n    const rand = Math.floor((Math.random() * 10) % 2);\r\n    if (rand === 1) {\r\n      this.state.status = \"It's \" + blue.username + \"'s turn\";\r\n      this.state.turn = \"O\";\r\n    } else if (rand === 0) {\r\n      this.state.status = \"It's \" + red.username + \"'s turn\";\r\n      this.state.turn = \"X\";\r\n    }\r\n  }\r\n\r\n  handlePlay = () => {\r\n    this.props.updateRound();\r\n    this.props.updateTurn();\r\n    window.location.reload();\r\n  };\r\n\r\n  handleEndGame = () => {\r\n    this.props.resetRound();\r\n    const{red,blue}=this.props;\r\n    api.get(\"/red/\"+red._id).then((res)=>{\r\n      const redData=res.data;\r\n      delete redData._id;\r\n      redData.total_score=red.total_score;\r\n      console.log(\"red\",redData);\r\n      api.put(\"/red/\"+red._id,redData).then((res)=>{\r\n        console.log(res);\r\n      })\r\n    })\r\n    api.get(\"/blue/\"+blue._id).then((res)=>{\r\n      const blueData=res.data;\r\n      delete blueData._id;\r\n      blueData.total_score=blue.total_score;\r\n      console.log(\"blue\",blueData);\r\n      api.put(\"/blue/\"+blue._id,blueData).then((res)=>{\r\n        console.log(res);\r\n      })\r\n    })\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  handleWinner = (winner) => {\r\n    const { red, blue } = this.props;\r\n    if (winner === \"D\") {\r\n      // console.log(\"It's a draw!\");\r\n      this.setState({ status: \"It's a draw!\", endGame: true });\r\n    } else {\r\n      // console.log(\"The winner is \" + winner);\r\n      if (winner === \"X\") {\r\n        this.setState({\r\n          status: \"The winner is \" + red.username,\r\n          endGame: true,\r\n          redScore: this.state.redScore + 1,\r\n        });\r\n        this.props.updateScore(\"red\");\r\n      } else if (winner === \"O\") {\r\n        this.setState({\r\n          status: \"The winner is \" + blue.username,\r\n          endGame: true,\r\n          blueScore: this.state.blueScore + 1,\r\n        });\r\n        this.props.updateScore(\"blue\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTurn = (turn) => {\r\n    this.setState({ turn }, () => {\r\n      this.handleStatus();\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ reset: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameBody\">\r\n        <Navbar />\r\n        {/* Match score here */}\r\n        <div className=\"matchscore\">\r\n          <div className=\"red-col\">\r\n            <i className=\"fab fa-slack fa-5x\"></i>\r\n            <div className=\"redscore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"player-name\">{this.props.red.username}</div>\r\n              <div className=\"red-player-score\">{this.props.red.total_score}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"blue-col\">\r\n            <div className=\"bluescore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"blue-player-score\">{this.props.blue.total_score}</div>\r\n              <div className=\"player-name\">{this.props.blue.username}</div>\r\n            </div>\r\n            <i className=\"fab fa-joomla fa-5x\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"layout\">\r\n          <TicTacToe\r\n            turn={this.state.turn}\r\n            reset={this.state.reset}\r\n            onReset={this.handleReset}\r\n            onWinner={this.handleWinner}\r\n            onChangeTurn={this.handleTurn}\r\n          />\r\n          <div className=\"status-container\">\r\n            <div className=\"round\">{`Round ${this.props.game.round}`}</div>\r\n            <div className=\"status\">{this.state.status}</div>\r\n            <div>\r\n              <button className=\"btn\" onClick={() => this.handlePlay()}>\r\n                Play Again\r\n              </button>\r\n              <button className=\"btn\" onClick={() => this.handleEndGame()}>\r\n                End Game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    red: state.player.red,\r\n    blue: state.player.blue,\r\n    game: state.game,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTurn: (t) => dispatch(updateTurn(t)),\r\n    updateRound: (r) => dispatch(updateRound(r)),\r\n    updateScore: (t) => dispatch(updateScore(t)),\r\n    endGame: () => dispatch(endGame()),\r\n    resetRound: ()=>dispatch(resetRound()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Scoreboard.css\";\r\nimport Axios from \"axios\";\r\nimport APIKEY from \"./APIKEY\";\r\n\r\nconst api = Axios.create({ baseURL: \"https://crudcrud.com/api/\" + APIKEY });\r\nclass Scoreboard extends Component {\r\n  state = {\r\n    redPlayers: [],\r\n    bluePlayers: [],\r\n    players: [],\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    for (var i = this.state.players.length; i < 10; i++) {\r\n      this.state.players.push({\r\n        username: \"-\",\r\n        password: \"-\",\r\n        total_score: 0,\r\n        team: \"-\",\r\n        total_matches: 0,\r\n        scores: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  color = (index) => {\r\n    const style = {\r\n      color: \"\",\r\n      fontSize: \"30px\",\r\n    };\r\n    if (this.state.players[index].team === \"red\") {\r\n      style.color = \"#ff6464\";\r\n    } else if (this.state.players[index].team === \"blue\") {\r\n      style.color = \"#00e0ff\";\r\n    } else {\r\n      style.color = \"#d6e0f0\";\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  componentDidMount() {\r\n    api.get(\"/red\").then((res) => {\r\n      this.setState({ redPlayers: res.data }, () => {\r\n        console.log(\"redplayers added!\");\r\n      });\r\n    });\r\n    api.get(\"/blue\").then((res) => {\r\n      this.setState({ bluePlayers: res.data }, () => {\r\n        console.log(\"blueplayers added!\");\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { redPlayers, bluePlayers, players } = this.state;\r\n    if (\r\n      redPlayers.length !== 0 &&\r\n      bluePlayers.length !== 0 &&\r\n      players[0].username === \"-\"\r\n    ) {\r\n      const players = [...redPlayers, ...bluePlayers];\r\n\r\n      players.sort((p1, p2) => p2.total_score - p1.total_score);\r\n      if (players.length < 10) {\r\n        for (var i = players.length; i < 10; i++) {\r\n          players.push({\r\n            username: \"-\",\r\n            password: \"-\",\r\n            total_score: 0,\r\n            team: \"-\",\r\n            total_matches: 0,\r\n            scores: [],\r\n          });\r\n        }\r\n      }\r\n      this.setState({ players });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render\", this.state.players);\r\n    return (\r\n      <div className=\"leaderboardContainer\">\r\n        <table className=\"tableboard\" align=\"center\">\r\n          <thead className=\"thead\">Leader Board</thead>\r\n          <tbody>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col col1\">1</th>\r\n\r\n              <td className=\"col\" style={this.color(0)}>\r\n                {this.state.players[0].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[0].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col col2\">2</th>\r\n              <td className=\"col\" style={this.color(1)}>\r\n                {this.state.players[1].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[1].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col col3\">3</th>\r\n              <td className=\"col\" style={this.color(2)}>\r\n                {this.state.players[2].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[2].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">4</th>\r\n              <td className=\"col\" style={this.color(3)}>\r\n                {this.state.players[3].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[3].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">5</th>\r\n              <td className=\"col\" style={this.color(4)}>\r\n                {this.state.players[4].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[4].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">6</th>\r\n              <td className=\"col\" style={this.color(5)}>\r\n                {this.state.players[5].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[5].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">7</th>\r\n              <td className=\"col\" style={this.color(6)}>\r\n                {this.state.players[6].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[6].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">8</th>\r\n              <td className=\"col\" style={this.color(7)}>\r\n                {this.state.players[7].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[7].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">9</th>\r\n              <td className=\"col\" style={this.color(8)}>\r\n                {this.state.players[8].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[8].total_score}</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"number-col\">10</th>\r\n              <td className=\"col\" style={this.color(9)}>\r\n                {this.state.players[9].username}\r\n              </td>\r\n\r\n              <td className=\"score-col\">{this.state.players[9].total_score}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"wave wave1\"></div>\r\n        <div className=\"wave wave2\"></div>\r\n        <div className=\"wave wave3\"></div>\r\n        <div className=\"wave wave4\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scoreboard;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Register.css\";\r\nimport Axios from \"axios\";\r\nimport APIKEY from \"./APIKEY\";\r\n\r\nconst api = Axios.create({ baseURL: \"https://crudcrud.com/api/\" + APIKEY });\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    team: \"\",\r\n    confirmPassword: \"\",\r\n    status: \"Join the pirates army!\",\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleRegister = (event) => {\r\n    const { username, password, team, confirmPassword } = this.state;\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n      team: team,\r\n      scores: [],\r\n      total_matches: 0,\r\n      total_score: 0,\r\n    };\r\n\r\n    api.get(\"/\" + team).then((res) => {\r\n      let found = false;\r\n      res.data.forEach((player) => {\r\n        console.log(player);\r\n        if (player.username === username) {\r\n          found = true;\r\n        }\r\n      });\r\n      if (found === true) {\r\n        this.setState({ status: \"Username already exists!\" });\r\n      } else {\r\n        if (password === confirmPassword) {\r\n          api\r\n            .post(\"/\" + team, data)\r\n            .then((res) => {\r\n              this.props.history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          this.setState({ status: \"Passwords don't match!\" });\r\n        }\r\n      }\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"title\">Marine Games</div>\r\n        <form className=\"input-field\" onSubmit={this.handleSubmit}>\r\n          <div className=\"registration-status\">{this.state.status}</div>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <div className=\"team-btns\">\r\n            <div\r\n              className=\"blue team-btn\"\r\n              style={{\r\n                backgroundColor: this.state.team === \"blue\" && \"white\",\r\n              }}\r\n              onClick={() => this.setState({ team: \"blue\" })}\r\n            >\r\n              Blue Team\r\n            </div>\r\n            <div\r\n              className=\"red team-btn\"\r\n              style={{\r\n                backgroundColor: this.state.team === \"red\" && \"white\",\r\n              }}\r\n              onClick={() => this.setState({ team: \"red\" })}\r\n            >\r\n              Red Team\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={(event) => {\r\n              this.handleRegister(event);\r\n            }}\r\n            className=\"register-btn\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n        <div className=\"wave wave1\"></div>\r\n        <div className=\"wave wave2\"></div>\r\n        <div className=\"wave wave3\"></div>\r\n        <div className=\"wave wave4\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import {\r\n  RED_AUTHENTICATE,\r\n  BLUE_AUTHENTICATE,\r\n  UPDATE_SCORE,\r\n} from \"./playerTypes\";\r\n\r\nconst player = {\r\n  red: {\r\n    id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    score: 0,\r\n    verified: false,\r\n  },\r\n  blue: {\r\n    id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    score: 0,\r\n    verified: false,\r\n  },\r\n};\r\n\r\nconst playerReducer = (state = player, action) => {\r\n  // console.log(\"payload\", action.payload);\r\n  switch (action.type) {\r\n    case RED_AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        red: { ...action.payload, verified: true },\r\n      };\r\n    case BLUE_AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        blue: { ...action.payload, verified: true },\r\n      };\r\n    case UPDATE_SCORE: {\r\n      const team = action.payload;\r\n      if (team === \"red\") {\r\n        return {\r\n          ...state,\r\n          red: {\r\n            ...state.red,\r\n            total_score: state.red.total_score+1,\r\n          },\r\n        };\r\n      } else if (team === \"blue\") {\r\n        return {\r\n          ...state,\r\n          blue: {\r\n            ...state.blue,\r\n            total_score: state.blue.total_score+1,\r\n          },\r\n        };\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playerReducer;\r\n","import {\r\n  END_GAME,\r\n  UPDATE_DIMENSIONS,\r\n  UPDATE_TURN,\r\n  UPDATE_ROUND,\r\n  RESET_ROUND\r\n} from \"./gameTypes\";\r\n\r\nconst game = {\r\n  dimensions: 3,\r\n  round: 1,\r\n  turn: \"X\",\r\n  endGame: false,\r\n};\r\n\r\nconst gameReducer = (state = game, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DIMENSIONS:\r\n      return {\r\n        ...state,\r\n        dimensions: action.payload,\r\n      };\r\n    case UPDATE_TURN: {\r\n      const nextTurn = action.payload === \"X\" ? \"O\" : \"X\";\r\n      return {\r\n        ...state,\r\n        turn: nextTurn,\r\n      };\r\n    }\r\n    case UPDATE_ROUND:\r\n      return {\r\n        ...state,\r\n        round: state.round + 1,\r\n      };\r\n    case END_GAME:\r\n      return {\r\n        ...state,\r\n        endGame: true,\r\n      };\r\n    case RESET_ROUND:\r\n      return{\r\n        ...state,\r\n        round:1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport playerReducer from \"./players/playerReducer\";\r\nimport gameReducer from \"./game/gameReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  game: gameReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nlet store = createStore(persistedReducer, devToolsEnhancer());\r\nlet persistor = persistStore(store);\r\nlet unsubscribe=store.subscribe(()=>{});\r\n\r\nexport { store, persistor,unsubscribe };\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AuthenticationPage from \"./components/Authentication\";\r\nimport GamePage from \"./components/Game\";\r\nimport Scoreboard from \"./components/Scoreboard\";\r\nimport Register from \"./components/Register\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <Router basename=\"/\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={AuthenticationPage} />\r\n              <Route path=\"/game\" component={GamePage} />\r\n              <Route path=\"/scoreboard\" component={Scoreboard} />\r\n              <Route path=\"/register\" component={Register} />\r\n            </Switch>\r\n          </Router>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}